@page "/"

<div class="game-container">
    @if (_gameSessionDetails is not null &&
         _guessedRight is false &&
         _gameOver is false)
    {
        <div class="attempts-bar">
            <span class="attempts-label">Attempts Remaining: </span>
            @for (int i = 0; i < _attemptsRemaining; i++)
            {
                <span class="attempt">■</span>
            }
        </div>

        <div class="word-grid">
            @for (int i = 0; i < _gameSessionDetails.Board.GetLength(0); i++)
            {
                <div class="word-row">
                    @for (int j = 0; j < _gameSessionDetails.Board[0].GetLength(0); j++)
                    {
                        var cell = _gameSessionDetails.Board[i][j];
                        var charHover = cell.Character.ToString();
                        var onClickEvent = cell.Word is null
                            ? EventCallback.Factory.Create(this, () => { })
                            : EventCallback.Factory.Create(this, () => GuessWordAsync(cell.Word));
                        var onHoverEvent = cell.Word is null
                            ? EventCallback.Factory.Create(this, () => ShowHoveredText(charHover))
                            : EventCallback.Factory.Create(this, () => ShowHoveredText(cell.Word));

                        <span class="word-char" @onmouseover="onHoverEvent" @onclick="onClickEvent">@cell.Character</span>
                    }
                </div>
            }
        </div>

        <div class="guess-input">
            @foreach (var text in _resultTexts)
            {
                <span> > @text</span>
            }
            <span> > @_inputText</span>
        </div>
    }

    @if (_guessedRight)
    {
        <div>:)</div>
    }

    @if (_gameOver)
    {
        <div>:(</div>
    }
</div>